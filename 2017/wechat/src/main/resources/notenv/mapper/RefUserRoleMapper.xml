<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.laowen.dao.RefUserRoleMapper">

    <resultMap id="BaseResultMap" type="refUserRole">
        <id column="ref_id" jdbcType="VARCHAR" property="refId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
    </resultMap>

    <sql id="Base_Column_List">
        ref_id, user_id, role_id, create_time, create_user
    </sql>

    <!-- 根据userId删除  -->
    <delete id="delByUserId">
        delete from ref_user_role
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>

    <!-- <insert id="saveBatch">
      insert into ref_user_role (user_id, role_id) values
      <foreach collection="roleIdList" item="roleId" separator=",">
          (#{userId},#{roleId})
      </foreach>
    </insert> -->

    <insert id="saveBatch">
        insert into ref_user_role (ref_id, user_id, role_id) values
        <foreach collection="mapList" item="m" separator=",">
            (
            #{m.refId,jdbcType=VARCHAR}
            ,#{m.userId,jdbcType=VARCHAR}
            ,#{m.roleId,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
</mapper>